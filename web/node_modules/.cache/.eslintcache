[{"/home/lucianolima00/MEGAsync/Repositories/Practice/portfolio/web/src/index.js":"1","/home/lucianolima00/MEGAsync/Repositories/Practice/portfolio/web/src/reportWebVitals.ts":"2","/home/lucianolima00/MEGAsync/Repositories/Practice/portfolio/web/src/App.tsx":"3","/home/lucianolima00/MEGAsync/Repositories/Practice/portfolio/web/src/routes.jsx":"4","/home/lucianolima00/MEGAsync/Repositories/Practice/portfolio/web/src/pages/Project/index.tsx":"5","/home/lucianolima00/MEGAsync/Repositories/Practice/portfolio/web/src/pages/Landing/index.tsx":"6","/home/lucianolima00/MEGAsync/Repositories/Practice/portfolio/web/src/services/api.ts":"7"},{"size":478,"mtime":1633621686588,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1633621686592,"results":"10","hashOfConfig":"9"},{"size":152,"mtime":1633621686536,"results":"11","hashOfConfig":"9"},{"size":399,"mtime":1633686068462,"results":"12","hashOfConfig":"9"},{"size":4418,"mtime":1633690190427,"results":"13","hashOfConfig":"9"},{"size":11778,"mtime":1634007046175,"results":"14","hashOfConfig":"9"},{"size":116,"mtime":1633621686592,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"jtkwo2",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"/home/lucianolima00/MEGAsync/Repositories/Practice/portfolio/web/src/index.js",[],["33","34"],"/home/lucianolima00/MEGAsync/Repositories/Practice/portfolio/web/src/reportWebVitals.ts",[],["35","36"],"/home/lucianolima00/MEGAsync/Repositories/Practice/portfolio/web/src/App.tsx",[],"/home/lucianolima00/MEGAsync/Repositories/Practice/portfolio/web/src/routes.jsx",[],"/home/lucianolima00/MEGAsync/Repositories/Practice/portfolio/web/src/pages/Project/index.tsx",["37","38","39","40","41"],"import './style.css';\nimport { Link, useParams } from \"react-router-dom\";\nimport React, { useEffect, useState } from 'react';\nimport api from \"../../services/api\";\n\nimport logo from '../../assets/lima-logo-black.png';\nimport openOnGit from '../../assets/open-on-git.png'\nimport projectImage from '../../assets/project-image.png'\nimport arrowButton from '../../assets/arrow-button.svg'\nimport {useRef} from \"react\";\n\nvar bgColors = { \n    \"PHP\": \"#4F309B\",\n    \"Flutter\": \"#04DAF2\",\n    \"NodeJS\": \"#8CC152\",\n    \"Dart\": \"#EC6C3C\",\n    \"Javascript\": \"#ECE03C\",\n};\n\nconst projectName = \"WEB PORTFOLIO\";\n\nconst ProjectView = () => {\n    interface Project {\n        id: number;\n        name: string;\n        image: string;\n        description: string;\n        first_tech_name: string;\n        first_tech_color: string;\n        second_tech_name: string;\n        second_tech_color: string;\n    }\n\n    let id: any;\n    ({id} = useParams());\n\n    console.log(id);\n\n    const [project, setProject] = useState<Project>();\n\n    useEffect(() => {\n        api.get(`/project/${id}`).then(response => {\n            setProject(response.data);\n        })\n    }, []);\n\n    console.log(project);\n\n    const ref = useRef<HTMLDivElement>(document.createElement(\"div\"));\n\n    const scroll = (scrollOffset = 0) => {\n        ref.current.scrollLeft += scrollOffset;\n    };\n\n    return(\n        <div id='page-project'>\n            <div id=\"background-middle-right\">\n            </div>\n            <div className='container'>\n\n                {/* HEADER */}\n\n                <div id=\"header\">\n                    <div id=\"header-logo-back\">\n                        <div id=\"logo-container\">\n                            <Link id='logo' to=\"/\">\n                                <img src={logo} alt='LIMA' />\n                            </Link>\n                        </div>\n                        <Link id='back-home' to=\"/\">\n                            <img src={arrowButton} alt='' />\n                            <b>BACK TO HOME</b>\n                        </Link>\n                    </div>\n                    <div id='header-phrase'>\n                        <span id=\"create\">CREATE</span>\n                        <span id=\"everything\">EVERYTHING</span>\n                    </div>\n                </div>\n\n                {/* PROJECTS */}\n\n                {\n                    project ? (<div className=\"project\">\n                        <div className=\"image\">\n                            <img src={project.image} alt={project.name} />\n                        </div>\n                        <div id=\"content\">\n                            <div className=\"project-title\">\n                                <p>{project.name}</p>\n                            </div>\n                            <div className=\"project-description\">\n                                <p>{project.description}</p>\n                            </div>\n                            <div className=\"project-info\">\n                                <div className=\"project-tecnologies\">\n                                    <div className=\"tech-dot\" style={{backgroundColor: project.first_tech_color}}/>\n                                    <div className=\"tech-name\">\n                                        <p>{project.first_tech_name}</p>\n                                    </div>\n                                    <div className=\"tech-dot\" style={{backgroundColor: project.second_tech_color}}/>\n                                    <div className=\"tech-name\">\n                                        <p>{project.second_tech_name}</p>\n                                    </div>\n                                </div>\n                                <div className=\"project-link\">\n                                    <a href=\"https://github.com/lucianolima00\">\n                                        <img src={openOnGit} alt=\"\" />\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>) : \"\"\n                }\n\n                <div id=\"copyright-container\">\n                    <b id=\"copyright\">COPYRIGHT Â© 2021 LIMA</b>\n                </div>\n                <div id=\"background-bottom-container-right\">\n                    <div id=\"background-bottom-right\"/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ProjectView;","/home/lucianolima00/MEGAsync/Repositories/Practice/portfolio/web/src/pages/Landing/index.tsx",[],"/home/lucianolima00/MEGAsync/Repositories/Practice/portfolio/web/src/services/api.ts",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":8,"column":8,"nodeType":"48","messageId":"49","endLine":8,"endColumn":20},{"ruleId":"46","severity":1,"message":"50","line":12,"column":5,"nodeType":"48","messageId":"49","endLine":12,"endColumn":13},{"ruleId":"46","severity":1,"message":"51","line":20,"column":7,"nodeType":"48","messageId":"49","endLine":20,"endColumn":18},{"ruleId":"52","severity":1,"message":"53","line":45,"column":8,"nodeType":"54","endLine":45,"endColumn":10,"suggestions":"55"},{"ruleId":"46","severity":1,"message":"56","line":51,"column":11,"nodeType":"48","messageId":"49","endLine":51,"endColumn":17},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"@typescript-eslint/no-unused-vars","'projectImage' is defined but never used.","Identifier","unusedVar","'bgColors' is assigned a value but never used.","'projectName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["59"],"'scroll' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},"Update the dependencies array to be: [id]",{"range":"62","text":"63"},[1144,1146],"[id]"]